//input was serialized outside of this program
var input = [['+', 489,959, 759,964], ['-', 820,516, 871,914], ['-', 427,423, 929,502], ['+', 774,14, 977,877], ['+', 410,146, 864,337], ['+', 931,331, 939,812], ['-', 756,53, 923,339], ['-', 313,787, 545,979], ['-', 12,823, 102,934], ['*', 756,965, 812,992], ['-', 743,684, 789,958], ['*', 120,314, 745,489], ['*', 692,845, 866,994], ['-', 587,176, 850,273], ['-', 674,321, 793,388], ['*', 749,672, 973,965], ['+', 943,30, 990,907], ['+', 296,50, 729,664], ['+', 212,957, 490,987], ['*', 171,31, 688,88], ['-', 991,989, 994,998], ['-', 913,943, 958,953], ['-', 278,258, 367,386], ['*', 275,796, 493,971], ['-', 70,873, 798,923], ['*', 258,985, 663,998], ['+', 601,259, 831,486], ['-', 914,94, 941,102], ['-', 558,161, 994,647], ['+', 119,662, 760,838], ['*', 378,775, 526,852], ['-', 384,670, 674,972], ['-', 249,41, 270,936], ['+', 614,742, 769,780], ['+', 427,70, 575,441], ['+', 410,478, 985,753], ['-', 619,46, 931,342], ['+', 284,55, 768,922], ['-', 40,592, 728,685], ['+', 825,291, 956,950], ['+', 147,843, 592,909], ['-', 218,675, 972,911], ['*', 249,291, 350,960], ['-', 556,80, 967,675], ['*', 609,148, 968,279], ['*', 217,605, 961,862], ['*', 407,177, 548,910], ['*', 400,936, 599,938], ['-', 721,101, 925,455], ['+', 268,631, 735,814], ['*', 549,969, 612,991], ['*', 553,268, 689,432], ['-', 817,668, 889,897], ['*', 801,544, 858,556], ['*', 615,729, 832,951], ['-', 427,477, 958,948], ['+', 164,49, 852,946], ['+', 542,449, 774,776], ['-', 923,196, 980,446], ['*', 90,310, 718,846], ['-', 657,215, 744,252], ['-', 800,239, 811,712], ['+', 502,90, 619,760], ['*', 649,512, 862,844], ['-', 334,903, 823,935], ['-', 630,233, 839,445], ['+', 713,67, 839,865], ['+', 932,50, 982,411], ['-', 480,729, 984,910], ['+', 100,219, 796,395], ['+', 758,108, 850,950], ['-', 427,276, 439,938], ['+', 178,284, 670,536], ['*', 540,27, 625,102], ['-', 906,722, 936,948], ['*', 345,418, 859,627], ['*', 175,775, 580,781], ['*', 863,28, 929,735], ['-', 824,858, 905,973], ['*', 752,312, 863,425], ['+', 985,716, 988,852], ['-', 68,504, 763,745], ['*', 76,209, 810,720], ['-', 657,607, 676,664], ['*', 596,869, 896,921], ['-', 915,411, 968,945], ['-', 368,39, 902,986], ['+', 11,549, 393,597], ['-', 842,893, 976,911], ['*', 274,106, 581,329], ['*', 406,403, 780,950], ['*', 408,988, 500,994], ['*', 217,73, 826,951], ['+', 917,872, 961,911], ['*', 394,34, 510,572], ['*', 424,603, 583,626], ['*', 106,159, 755,738], ['-', 244,610, 472,709], ['+', 350,265, 884,690], ['+', 688,184, 928,280], ['*', 279,443, 720,797], ['-', 615,493, 888,610], ['*', 118,413, 736,632], ['+', 798,782, 829,813], ['-', 250,934, 442,972], ['+', 68,503, 400,949], ['*', 297,482, 313,871], ['*', 710,3, 839,859], ['+', 125,300, 546,888], ['*', 482,39, 584,159], ['-', 536,89, 765,962], ['+', 530,518, 843,676], ['+', 994,467, 994,676], ['+', 623,628, 744,927], ['*', 704,912, 837,983], ['+', 154,364, 517,412], ['*', 344,409, 780,524], ['-', 578,740, 725,879], ['+', 251,933, 632,957], ['+', 827,705, 971,789], ['*', 191,282, 470,929], ['*', 324,525, 446,867], ['*', 534,343, 874,971], ['*', 550,650, 633,980], ['*', 837,404, 881,915], ['*', 338,881, 845,905], ['+', 469,462, 750,696], ['+', 741,703, 892,870], ['-', 570,215, 733,562], ['+', 445,576, 870,775], ['+', 466,747, 554,878], ['-', 820,453, 868,712], ['-', 892,706, 938,792], ['-', 300,238, 894,746], ['-', 306,44, 457,444], ['-', 912,569, 967,963], ['*', 109,756, 297,867], ['+', 37,546, 41,951], ['+', 321,637, 790,910], ['*', 66,50, 579,301], ['*', 933,221, 933,791], ['+', 486,676, 878,797], ['+', 417,231, 556,317], ['*', 904,468, 981,873], ['+', 417,675, 749,712], ['+', 692,371, 821,842], ['*', 324,73, 830,543], ['+', 912,490, 977,757], ['-', 634,872, 902,949], ['*', 266,779, 870,798], ['+', 772,982, 990,996], ['-', 607,46, 798,559], ['+', 295,602, 963,987], ['+', 657,86, 944,742], ['-', 334,639, 456,821], ['-', 997,667, 997,670], ['-', 725,832, 951,945], ['-', 30,120, 952,984], ['+', 860,965, 917,976], ['*', 471,997, 840,998], ['-', 319,307, 928,504], ['*', 823,631, 940,908], ['*', 969,984, 981,993], ['-', 691,319, 865,954], ['*', 911,926, 938,929], ['+', 953,937, 968,991], ['*', 914,643, 975,840], ['+', 266,982, 436,996], ['-', 101,896, 321,932], ['-', 193,852, 751,885], ['-', 576,532, 863,684], ['+', 761,456, 940,783], ['+', 20,290, 398,933], ['-', 435,335, 644,652], ['+', 830,569, 905,770], ['-', 630,517, 905,654], ['+', 664,53, 886,976], ['*', 275,416, 408,719], ['+', 370,621, 515,793], ['+', 483,373, 654,749], ['+', 656,786, 847,928], ['-', 532,752, 945,974], ['*', 301,150, 880,792], ['-', 951,488, 958,952], ['+', 207,729, 882,828], ['*', 694,532, 973,961], ['*', 676,639, 891,802], ['-', 653,6, 905,519], ['*', 391,109, 418,312], ['+', 877,423, 957,932], ['+', 340,145, 563,522], ['-', 978,467, 988,895], ['-', 396,418, 420,885], ['-', 31,308, 816,316], ['+', 107,675, 758,824], ['+', 61,82, 789,876], ['+', 750,743, 754,760], ['*', 88,733, 736,968], ['-', 754,349, 849,897], ['*', 157,50, 975,781], ['-', 230,231, 865,842], ['-', 516,317, 630,329], ['-', 697,820, 829,903], ['+', 218,250, 271,732], ['*', 56,167, 404,431], ['*', 626,891, 680,927], ['*', 370,207, 791,514], ['*', 860,74, 949,888], ['+', 416,527, 616,541], ['-', 745,449, 786,908], ['+', 485,554, 689,689], ['+', 586,62, 693,141], ['*', 506,759, 768,829], ['+', 473,109, 929,166], ['+', 760,617, 773,789], ['*', 595,683, 618,789], ['-', 210,775, 825,972], ['*', 12,426, 179,982], ['+', 774,539, 778,786], ['+', 102,498, 121,807], ['-', 706,897, 834,965], ['-', 678,529, 824,627], ['+', 7,765, 615,870], ['-', 730,872, 974,943], ['-', 595,626, 836,711], ['-', 215,424, 841,959], ['*', 341,780, 861,813], ['*', 507,503, 568,822], ['+', 252,603, 349,655], ['*', 93,521, 154,834], ['+', 565,682, 951,954], ['+', 544,318, 703,418], ['*', 756,953, 891,964], ['+', 531,123, 856,991], ['+', 148,315, 776,559], ['-', 925,835, 963,971], ['+', 895,944, 967,964], ['-', 102,527, 650,747], ['*', 626,105, 738,720], ['-', 160,75, 384,922], ['*', 813,724, 903,941], ['+', 207,107, 982,849], ['*', 750,505, 961,697], ['*', 105,410, 885,819], ['+', 226,104, 298,283], ['-', 224,604, 508,762], ['+', 477,368, 523,506], ['-', 477,901, 627,936], ['-', 887,131, 889,670], ['+', 896,994, 938,999], ['*', 401,580, 493,728], ['*', 987,184, 991,205], ['+', 821,643, 882,674], ['*', 784,940, 968,959], ['-', 251,293, 274,632], ['-', 339,840, 341,844], ['-', 675,351, 675,836], ['*', 918,857, 944,886], ['*', 70,253, 918,736], ['-', 612,604, 772,680], ['-', 277,40, 828,348], ['*', 692,139, 698,880], ['*', 124,446, 883,453], ['*', 969,932, 990,945], ['*', 855,692, 993,693], ['*', 722,472, 887,899], ['*', 978,149, 985,442], ['*', 837,540, 916,889], ['-', 612,2, 835,82], ['*', 560,767, 878,856], ['+', 461,734, 524,991], ['*', 206,824, 976,912], ['+', 826,610, 879,892], ['+', 577,699, 956,933], ['-', 9,250, 50,529], ['-', 77,657, 817,677], ['+', 68,419, 86,426], ['+', 991,720, 992,784], ['+', 668,20, 935,470], ['-', 133,418, 613,458], ['-', 487,286, 540,328], ['*', 247,874, 840,955], ['*', 301,808, 754,970], ['-', 34,194, 578,203], ['-', 451,49, 492,921], ['+', 907,256, 912,737], ['-', 479,305, 702,587], ['+', 545,583, 732,749], ['*', 11,16, 725,868], ['+', 965,343, 986,908], ['+', 674,953, 820,965], ['*', 398,147, 504,583], ['-', 778,194, 898,298], ['+', 179,140, 350,852], ['-', 241,118, 530,832], ['-', 41,447, 932,737], ['-', 820,663, 832,982], ['+', 550,460, 964,782], ['+', 31,760, 655,892], ['*', 628,958, 811,992]];
//var input = [['+', 0,0, 999,0],['+', 499,499, 500,500],['+', 0,0, 1,1]]
var lights = [];

function createLightsArray(){
    for(var x = 0; x < 1000; x++){
        lights[x]=[];
        for(var y = 0; y < 1000; y++){
            lights[x][y] =
            {
                status: 0,
                brightness: 0
            };
        }
    }
}

function parseInstruction(instruction){
    var operation = instruction[0];
    var startX = instruction[1];
    var startY = instruction[2];
    var finX = instruction[3];
    var finY = instruction[4];
    console.log(startX+" "+startY+" "+operation+" "+finX+" "+finY);
    for( var i1 = startX; i1 <= finX; i1++ ) {
        for (var i2 = startY; i2 <= finY; i2++) {
            switch (operation) {
                case '+':
                {
                    lights[i1][i2].status = 1;
                    break;
                }
                case '-':
                {
                    lights[i1][i2].status = 0;
                    break;
                }
                case '*':
                {
                    lights[i1][i2].status ^= 1;
                    break;
                }
            }
        }
    }
}

//find solution
createLightsArray();
for (var i = 0; i < input.length; i++){
    parseInstruction(input[i]);
}

var counter = 0;

for(var x = 0; x < lights.length; x++){
    for(var y = 0; y < lights[x].length; y++){
        counter+=lights[x][y].status;
    }
}

console.log(counter);